#include <stdio.h>
#include <stdlib.h>

int currentFloor = 1;
int nextFloor;

struct Node{
	int data;
	struct Node *next;
};

void append(struct Node **head, int new_data)
{
	struct Node* new_node = (struct Node*)malloc(sizeof(struct Node));
	struct Node *last = *head;
	new_node->data = new_data;
	new_node->next = NULL;
	if(*head == NULL){
		*head = new_node;
		return;
	}

	while(last->next != NULL){
		last = last->next;
	}
	last->next = new_node;
}

void print_list(struct Node *n)
{
	while(n != NULL){
		printf("%d\n", n->data);
		n = n->next;
	}
}

void clear_list(struct Node** n)
{
	struct Node* current = *n;
	struct Node* next;
	while(current != NULL){
		next = current->next;
		free(current);
		current = next;
	}
	*n = NULL;
}

void stop(struct Node *n)
{
    //struct Node* current = *n;
	struct Node** current = currentFloor;
	
	if (currentFloor = nextFloor)
	{
		struct Node** current = NULL;
	}
}


int main()
{
    //int currentFloor = 1;
	//int nextFloor;

// use free?

  for(int i = 0; i < currentFloor; i++)
    {

       if(currentFloor <= 15)
	   
    {
		
     
     struct Node* head = NULL;
	 struct Node* second = NULL;
	 struct Node* third = NULL;
     struct Node* fourth = NULL;
     struct Node* fifth = NULL;
      struct Node* sixth = NULL;
     struct Node* seventh = NULL;

 	 head = (struct Node*)malloc(sizeof(struct Node));
	 second = (struct Node*)malloc(sizeof(struct Node));
	 third = (struct Node*)malloc(sizeof(struct Node));
     fourth = (struct Node*)malloc(sizeof(struct Node));
     fifth = (struct Node*)malloc(sizeof(struct Node));
     sixth = (struct Node*)malloc(sizeof(struct Node));
     seventh = (struct Node*)malloc(sizeof(struct Node));
     


	 head->data = 1;
	 head->next = second;
	 second->data = 2;
	 second->next = third;
	 third->data = 3;
	 third->next = fourth;
     fourth->data = 4;
     fourth->next = fifth;
     fifth->data = 5;
     fifth->next = sixth;
     sixth->data = 6;
     sixth->next = seventh;
     seventh->data = 7;
     seventh->next = NULL;


       printf("The Top Floor is 15. What Floor Would you Like to go to? The Current Floor is %d\n", (currentFloor));
       //scanf("Going to Floor\n%d", &currentFloor);
        nextFloor = getchar(nextFloor);
       printf("\nGoing to floor: ");
       putchar(nextFloor);

      



	 print_list(head);
     append(&head, 15);
     print_list(head);
	 clear_list(&head);
       return 0;

	   stop(currentFloor);

     }

   else
   {
     printf("Please select a floor number...");
   }

     }

	

}
  
